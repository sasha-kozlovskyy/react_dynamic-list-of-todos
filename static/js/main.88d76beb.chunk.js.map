{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","state","query","select","onChangeInput","event","setState","target","value","onChangeSelect","filterList","length","props","todos","filter","todo","title","toLowerCase","includes","selectUser","this","filteredTodos","completed","className","type","placeholder","id","onChange","name","map","key","defaultChecked","onClick","userId","React","Component","CurrentUser","currentUser","clearSelect","email","phone","request","url","fetch","then","response","json","serverResponse","data","App","selectedUserId","prevstate","users","find","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88d76beb.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    select: 'All',\n  }\n\n  onChangeInput = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  onChangeSelect = (event) => {\n    this.setState({\n      select: event.target.value,\n    });\n  }\n\n  filterList = () => (\n    this.state.query.length > 0\n      ? this.props.todos.filter(\n        (todo) => {\n          if (todo.title === null) {\n            return false;\n          }\n\n          return todo.title.toLowerCase()\n            .includes(this.state.query.toLowerCase());\n        },\n      )\n      : this.props.todos\n  )\n\n  render() {\n    const { selectUser } = this.props;\n    let filteredTodos = this.filterList();\n\n    if (this.state.select !== 'All') {\n      filteredTodos = filteredTodos.filter(todo => (\n        this.state.select === 'Completed'\n          ? todo.completed\n          : !todo.completed\n      ));\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search todo\"\n          id=\"search-query\"\n          value={this.state.query}\n          onChange={this.onChangeInput}\n        />\n        <select\n          className=\"select\"\n          name=\"select\"\n          id=\"select\"\n          onChange={this.onChangeSelect}\n        >\n          <option\n            value=\"All\"\n          >\n            All\n          </option>\n          <option\n            value=\"Completed\"\n          >\n            Completed\n          </option>\n          <option\n            value=\"Active\"\n          >\n            Active\n          </option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={\n                  `TodoList__item\n                  TodoList__item--${todo.completed ? 'checked' : 'unchecked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    defaultChecked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))\n          }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ userId, currentUser, clearSelect }) => (\n\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:&nbsp;\n        {userId}\n      </span>\n    </h2>\n    {currentUser && (\n      <>\n        <h3 className=\"CurrentUser__name\">{currentUser.name}</h3>\n        <p className=\"CurrentUser__email\">{currentUser.email}</p>\n        <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n      </>\n    )}\n    <button\n      type=\"button\"\n      onClick={clearSelect}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearSelect: PropTypes.func.isRequired,\n  currentUser: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(serverResponse => serverResponse.data || serverResponse);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    currentUser: null,\n  };\n\n  componentDidMount() {\n    request('/todos').then((todos) => {\n      this.setState({\n        todos,\n      });\n    });\n  }\n\n  componentDidUpdate(prevstate) {\n    if (prevstate.selectedUserId !== this.state.selectedUserId) {\n      request('/users/').then((users) => {\n        this.setState(state => ({\n          currentUser: users.find(user => user.id === state.selectedUserId),\n        }));\n      });\n    }\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearSelect = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId, currentUser } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                currentUser={currentUser}\n                clearSelect={this.clearSelect}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}